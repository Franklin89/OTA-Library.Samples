//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReadReservations
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.opentravel.org/OTA/2003/05", ConfigurationName="ServiceReference1.OTA2009A_ReadReservationsSoap")]
    public interface OTA2009A_ReadReservationsSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.opentravel.org/OTA/2003/05/GetResponse", ReplyAction="*")]
        System.Threading.Tasks.Task<ReadReservations.GetResponseResponse> GetResponseAsync(ReadReservations.GetResponseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.opentravel.org/OTA/2003/05/SetClientIP", ReplyAction="*")]
        System.Threading.Tasks.Task<ReadReservations.SetClientIPResponse> SetClientIPAsync(ReadReservations.SetClientIPRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetResponseRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetResponse", Namespace="http://www.opentravel.org/OTA/2003/05", Order=0)]
        public ReadReservations.GetResponseRequestBody Body;
        
        public GetResponseRequest()
        {
        }
        
        public GetResponseRequest(ReadReservations.GetResponseRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.opentravel.org/OTA/2003/05")]
    public partial class GetResponseRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string xmlString;
        
        public GetResponseRequestBody()
        {
        }
        
        public GetResponseRequestBody(string xmlString)
        {
            this.xmlString = xmlString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetResponseResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetResponseResponse", Namespace="http://www.opentravel.org/OTA/2003/05", Order=0)]
        public ReadReservations.GetResponseResponseBody Body;
        
        public GetResponseResponse()
        {
        }
        
        public GetResponseResponse(ReadReservations.GetResponseResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.opentravel.org/OTA/2003/05")]
    public partial class GetResponseResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetResponseResult;
        
        public GetResponseResponseBody()
        {
        }
        
        public GetResponseResponseBody(string GetResponseResult)
        {
            this.GetResponseResult = GetResponseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetClientIPRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetClientIP", Namespace="http://www.opentravel.org/OTA/2003/05", Order=0)]
        public ReadReservations.SetClientIPRequestBody Body;
        
        public SetClientIPRequest()
        {
        }
        
        public SetClientIPRequest(ReadReservations.SetClientIPRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.opentravel.org/OTA/2003/05")]
    public partial class SetClientIPRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ip;
        
        public SetClientIPRequestBody()
        {
        }
        
        public SetClientIPRequestBody(string ip)
        {
            this.ip = ip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetClientIPResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetClientIPResponse", Namespace="http://www.opentravel.org/OTA/2003/05", Order=0)]
        public ReadReservations.SetClientIPResponseBody Body;
        
        public SetClientIPResponse()
        {
        }
        
        public SetClientIPResponse(ReadReservations.SetClientIPResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class SetClientIPResponseBody
    {
        
        public SetClientIPResponseBody()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface OTA2009A_ReadReservationsSoapChannel : ReadReservations.OTA2009A_ReadReservationsSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class OTA2009A_ReadReservationsSoapClient : System.ServiceModel.ClientBase<ReadReservations.OTA2009A_ReadReservationsSoap>, ReadReservations.OTA2009A_ReadReservationsSoap
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public OTA2009A_ReadReservationsSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(OTA2009A_ReadReservationsSoapClient.GetBindingForEndpoint(endpointConfiguration), OTA2009A_ReadReservationsSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OTA2009A_ReadReservationsSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(OTA2009A_ReadReservationsSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OTA2009A_ReadReservationsSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(OTA2009A_ReadReservationsSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OTA2009A_ReadReservationsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReadReservations.GetResponseResponse> ReadReservations.OTA2009A_ReadReservationsSoap.GetResponseAsync(ReadReservations.GetResponseRequest request)
        {
            return base.Channel.GetResponseAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReadReservations.GetResponseResponse> GetResponseAsync(string xmlString)
        {
            ReadReservations.GetResponseRequest inValue = new ReadReservations.GetResponseRequest();
            inValue.Body = new ReadReservations.GetResponseRequestBody();
            inValue.Body.xmlString = xmlString;
            return ((ReadReservations.OTA2009A_ReadReservationsSoap)(this)).GetResponseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReadReservations.SetClientIPResponse> ReadReservations.OTA2009A_ReadReservationsSoap.SetClientIPAsync(ReadReservations.SetClientIPRequest request)
        {
            return base.Channel.SetClientIPAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReadReservations.SetClientIPResponse> SetClientIPAsync(string ip)
        {
            ReadReservations.SetClientIPRequest inValue = new ReadReservations.SetClientIPRequest();
            inValue.Body = new ReadReservations.SetClientIPRequestBody();
            inValue.Body.ip = ip;
            return ((ReadReservations.OTA2009A_ReadReservationsSoap)(this)).SetClientIPAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.OTA2009A_ReadReservationsSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.OTA2009A_ReadReservationsSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.OTA2009A_ReadReservationsSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://interfacetest.deskline.net/OTA/ReadReservations.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.OTA2009A_ReadReservationsSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://interfacetest.deskline.net/OTA/ReadReservations.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            OTA2009A_ReadReservationsSoap,
            
            OTA2009A_ReadReservationsSoap12,
        }
    }
}
